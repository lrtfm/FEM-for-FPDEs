function output_bgm_file(dim, bgm_file_name, bgm_field)
    mesh = bgm_field.mesh;
    h = bgm_field.h;
    fid = fopen(bgm_file_name, 'w');
    
    file_begin = [...
        '/********************************************************************* ' newline ...
        ' *' newline ...
        ' *  Gmsh file generated by matlab' newline ...
        ' * ' newline ...
        ' *  ' int2str(dim) 'D background mesh' newline ...
        ' *' newline ...
        ' *********************************************************************/' newline ...
        '' newline ...
        '// There are two ways to use this view as a background mesh:' newline ...
        '//' newline ...
        '// 1) open xxx.geo, merge bgmesh.pos, select ''Apply as background mesh''' newline ...
        '//    in the view''s options (by right mouse clicking on the view''s' newline ...
        '//    button), and mesh the problem.' newline ...
        '//' newline ...
        '// 2) launch Gmsh with ''gmsh xxxx.geo -bgm bgmesh.pos'' and mesh the ' newline ...
        '//    problem.' newline ...
        '' newline ...
        'View "background mesh" {' newline
    ];
    file_end = '};';

    fprintf(fid, file_begin);
    ne = size(mesh.Elements, 2);
    type_flag = {'','ST', 'SS'};
    str_format = [type_flag{dim} ...
                  '(' strjoin(repmat({'%.8f'}, 1, (dim+1)*3), ',') ')' ...
                  '{' strjoin(repmat({'%.8f'}, 1, dim+1), ',') '};' newline];
%     str_format = ['SS(%.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f)'...
%                     '{%.8f, %.8f, %.8f, %.8f};' newline];
    if dim == 2
        mesh.Nodes = [mesh.Nodes; zeros(1, size(mesh.Nodes, 2))];
    end
    flag = length(h) == ne; % h can be same lenth with nodes or elements
    if ~flag
        if length(h) ~= size(mesh.Nodes, 2)
            error('The length of h is not correct');
        end
    end
    for i = 1:ne
        if flag
            fprintf(fid, str_format, mesh.Nodes(:, mesh.Elements(:, i)), repmat(h(i),1, dim+1));
        else
            fprintf(fid, str_format, mesh.Nodes(:, mesh.Elements(:, i)), h(mesh.Elements(:, i)));
        end
    end
    fprintf(fid, file_end);
    fclose(fid);
end